From 53d53cfbb13ef440d31ce472a401c2e33b9d93fc Mon Sep 17 00:00:00 2001
From: Stefan Roese <sr@denx.de>
Date: Mon, 3 Dec 2018 10:54:57 +0100
Subject: [PATCH] [sg noup] net: ethernet: ralink: mtk_eth_soc: Set DMA masks

Without setting the DMA masks, the DMA subsystem complains and xfer
does not work correctly. So lets set the DMA masks in the probe
function.

Additionally the patch fixes some compile warnings.

Signed-off-by: Stefan Roese <sr@denx.de>
---
 drivers/net/ethernet/ralink/mtk_eth_soc.c | 19 ++++++++++++++++++-
 1 file changed, 18 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/ralink/mtk_eth_soc.c b/drivers/net/ethernet/ralink/mtk_eth_soc.c
index b6e321b78c0c..84d85a56ffc9 100644
--- a/drivers/net/ethernet/ralink/mtk_eth_soc.c
+++ b/drivers/net/ethernet/ralink/mtk_eth_soc.c
@@ -1545,7 +1545,11 @@ static int fe_probe(struct platform_device *pdev)
 	struct clk *sysclk;
 	int err, napi_weight;
 
-	device_reset(&pdev->dev);
+	err = device_reset(&pdev->dev);
+	if (err) {
+		dev_err(&pdev->dev, "device_reset failed (%d)!\n", err);
+		return err;
+	}
 
 	match = of_match_device(of_fe_match, &pdev->dev);
 	soc = (struct fe_soc_data *)match->data;
@@ -1640,6 +1644,19 @@ static int fe_probe(struct platform_device *pdev)
 	netif_napi_add(netdev, &priv->rx_napi, fe_poll, napi_weight);
 	fe_set_ethtool_ops(netdev);
 
+	/* Init DMA mask */
+	netdev->dev.dma_mask = &netdev->dev.coherent_dma_mask;
+	err = dma_set_mask(&netdev->dev, DMA_BIT_MASK(32));
+	if (err) {
+		dev_err(&pdev->dev, "error setting DMA mask\n");
+		goto err_free_dev;
+	}
+	err = dma_set_coherent_mask(&netdev->dev, DMA_BIT_MASK(32));
+	if (err) {
+		dev_err(&pdev->dev, "error setting coherent DMA mask\n");
+		goto err_free_dev;
+	}
+
 	err = register_netdev(netdev);
 	if (err) {
 		dev_err(&pdev->dev, "error bringing up device\n");
-- 
2.30.2

