software = {
    version = "@@DISTRO_VERSION_ID@@";
    description = "Linux System Firmware for the GARDENA smart Gateway MT7688";

    embedded-script ="
function set_power_led_yellow_flash()
  -- note: we're not using 'led-indicator flash' here as it will lead
  -- to a visible delay between red and green
  local green = \"/sys/class/leds/smartgw:power:green\"
  local red = \"/sys/class/leds/smartgw:power:red\"
  local blue = \"/sys/class/leds/smartgw:power:blue\"

  -- Disable the blue power LED
  os.execute (\"echo oneshot > \" .. blue .. \"/trigger\")
  os.execute (\"echo 0 > \" .. blue .. \"/brightness\")

  -- Expose and configure timer interface
  os.execute (\"echo timer > \" .. green .. \"/trigger\")
  os.execute (\"echo timer > \" .. red .. \"/trigger\")
  os.execute (\"echo 500 > \" .. green .. \"/delay_on\")
  os.execute (\"echo 500 > \" .. green .. \"/delay_off\")
  os.execute (\"echo 500 > \" .. red .. \"/delay_on\")
  os.execute (\"echo 500 > \" .. red .. \"/delay_off\")

  -- keep these two together for synchronicity between R and G components
  os.execute (\"echo timer > \" .. green .. \"/trigger\")
  os.execute (\"echo timer > \" .. red .. \"/trigger\")
end

function check_version_and_leds()
  local ver = \"@@DISTRO_VERSION_ID@@\"
  local f = io.popen(\"fw_printenv -n linux_system_version || echo unknown\")
  installed = f:read()
  f:close()

  if (ver == installed) then
    msg = \"Version \" ..  ver .. \" is already installed\"
    return false, msg
  else
    msg = \"Installing \" .. ver
    set_power_led_yellow_flash()
    return true, msg
  end
end";

    smart-gateway-@@MACHINE_ARCH@@ = {
        hardware-compatibility: [ "0.5", "1.0", "1.1.0" ];

        stable = {
            bootslot0 = {
                images = (
                    {
                        filename = "gardena-image-prod-@@MACHINE_ARCH@@.squashfs-xz";
                        volume = "rootfs1";
                        sha256 = "@gardena-image-prod-@@MACHINE_ARCH@@.squashfs-xz";
                        hook = "check_version_and_leds";
                        installed-directly = true;
                    },
                    {
                        filename = "fitImage-@@MACHINE_ARCH@@.bin";
                        volume = "kernel1";
                        sha256 = "@fitImage-@@MACHINE_ARCH@@.bin";
                        installed-directly = true;
                    },
                    {
                        filename = "uEnv-@@MACHINE_ARCH@@.txt";
                        type = "bootloader";
                        sha256 = "@uEnv-@@MACHINE_ARCH@@.txt";
                    },
                    {
                        filename = "u-boot-@@MACHINE_ARCH@@.bin";
                        mtdname = "uboot";
                        type = "flash";
                        sha256 = "@u-boot-@@MACHINE_ARCH@@.bin";
                    }
                )

                bootenv = (
                    {
                        name = "bootslot";
                        value = "1";
                    },
                    {
                        name = "linux_system_version";
                        value = "@@DISTRO_VERSION_ID@@";
                    },
                    {
                        name = "swupdate_done";
                        value = "1";
                    },
                    {
                        name = "do_if_post_linux_system_upgrade"; /* Deleted as part of SG-10590 */
                        value = "";
                    },
                    {
                        name = "mtdids"; /* Delete potentially no longer valid mapping (SG-10970) */
                        value = "";
                    },
                    {
                        name = "mtdparts"; /* Delete potentially no longer valid partition layout (SG-10970) */
                        value = "";
                    }
                )
            }

            bootslot1 = {
                images = (
                    {
                        filename = "gardena-image-prod-@@MACHINE_ARCH@@.squashfs-xz";
                        volume = "rootfs0";
                        sha256 = "@gardena-image-prod-@@MACHINE_ARCH@@.squashfs-xz";
                        hook = "check_version_and_leds";
                        installed-directly = true;
                    },
                    {
                        filename = "fitImage-@@MACHINE_ARCH@@.bin";
                        volume = "kernel0";
                        sha256 = "@fitImage-@@MACHINE_ARCH@@.bin";
                        installed-directly = true;
                    },
                    {
                        filename = "uEnv-@@MACHINE_ARCH@@.txt";
                        type = "bootloader";
                        sha256 = "@uEnv-@@MACHINE_ARCH@@.txt";
                    },
                    {
                        filename = "u-boot-@@MACHINE_ARCH@@.bin";
                        mtdname = "uboot";
                        type = "flash";
                        sha256 = "@u-boot-@@MACHINE_ARCH@@.bin";
                    }
                )

                bootenv = (
                    {
                        name = "bootslot";
                        value = "0";
                    },
                    {
                        name = "linux_system_version";
                        value = "@@DISTRO_VERSION_ID@@";
                    },
                    {
                        name = "swupdate_done";
                        value = "1";
                    },
                    {
                        name = "do_if_post_linux_system_upgrade"; /* Deleted as part of SG-10590 */
                        value = "";
                    },
                    {
                        name = "mtdids"; /* Delete potentially no longer valid mapping (SG-10970) */
                        value = "";
                    },
                    {
                        name = "mtdparts"; /* Delete potentially no longer valid partition layout (SG-10970) */
                        value = "";
                    }
                )
            }
        }
    }
}
