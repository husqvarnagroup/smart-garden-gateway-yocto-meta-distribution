# This file is sourced by dhcpcd-run-hooks. Not setting shell options.

# dhcpcd hook script for setting explicit routes to the name servers. This is
# required, because the default route will be changed to the vpn and we want to
# use the original name servers.
#
# Used variables:
# * if_up: State of the interface.
# * interface: Name of the interface.
# * new_domain_name_servers: Space separated list of name servers.
# * new_network_number: Local network.
# * new_routers: Default router.
# * new_subnet_mask: Local network mask.
# * reason: Action name which caused the hook to get called.

address_is_in_network() {
    # Calculate if an IPv4 address with netmask is part of a network.
    # parameters: address netmask network
    IFS=. read -r a1 a2 a3 a4 << EOF
$1
EOF
    IFS=. read -r m1 m2 m3 m4 << EOF
$2
EOF
    IFS=. read -r n1 n2 n3 n4 << EOF
$3
EOF
    [ $((a1 & m1)) -eq "$n1" ] && \
    [ $((a2 & m2)) -eq "$n2" ] && \
    [ $((a3 & m3)) -eq "$n3" ] && \
    [ $((a4 & m4)) -eq "$n4" ]
}

add_routes() {
    for server in $new_domain_name_servers; do
        if ! ip route | grep -q "^${server} via ${new_routers} dev ${interface}"; then
            ip route del "${server}" || true
            if ! address_is_in_network "$server" "$new_subnet_mask" "$new_network_number"; then
                ip route add "$server" via "$new_routers" dev "$interface"
            fi
        fi
    done
}

if [ "$if_up" = "true" ]; then
    case "$reason" in
        BOUND|RENEW|REBIND|REBOOT|INFORM)
            add_routes
            ;;
    esac
fi
