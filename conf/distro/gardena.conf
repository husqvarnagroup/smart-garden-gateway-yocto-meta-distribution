DISTRO = "gardena"
DISTRO_NAME = "GARDENA smart Gateway"
DISTRO_VERSION ?= "7"
DISTRO_VERSION_ID ?= "${DISTRO_VERSION}-snapshot-${DATE}"
DISTRO_CODENAME ?= "The Bleeding Edge"
DISTRO_UPDATE_URL_BASE ?= "http://gateway.iot.sg.dss.husqvarnagroup.net/images"

SDK_VENDOR = "-gardenasdk"
SDK_VERSION := "${@'${DISTRO_VERSION}'.replace('snapshot-${DATE}','snapshot')}"

MAINTAINER = "Open Source <smart.open.source@husqvarnagroup.com>"

TARGET_VENDOR = "-gardena"

LOCALCONF_VERSION = "1"

DISTRO_VERSION[vardepsexclude] = "DATE"
SDK_VERSION[vardepsexclude] = "DATE"

DISTRO_FEATURES ?= "${DISTRO_FEATURES_LIBC} systemd wifi ppp ipv6 ipv4 usrmerge"
DISTRO_FEATURES:remove = "pulseaudio"
# remove bluez5 as it is not currently needed
# enable again, if bluetooth will be used
DISTRO_FEATURES:remove = "bluez5"
DISTRO_FEATURES_BACKFILL_CONSIDERED += "sysvinit"
VIRTUAL-RUNTIME_init_manager = "systemd"
VIRTUAL-RUNTIME_initscripts = "systemd-compat-units"

PREFERRED_PROVIDER_u-boot-fw-utils = "libubootenv"
PREFERRED_VERSION_swupdate = "2023.05"
PREFERRED_VERSION_linux-yocto-tiny = "5.10.202%"

# Make sure that we only use our own recipe even though it's older.
# This is currently the only version that we know passed BCT.
PREFERRED_VERSION_mdns = "878.70.2"

# For accessory-server
PREFERRED_VERSION_mbedtls = "2.28.%"

# For reset-rm
PREFERRED_VERSION_libgpiod = "1.%"

PREFERRED_VERSION_openocd = "0.10%"

TCLIBC ?= "glibc"

SDK_NAME = "${DISTRO}-${TCLIBC}-${SDK_ARCH}-${IMAGE_BASENAME}-${TUNE_PKGARCH}"
SDKPATH = "/opt/${DISTRO}/${SDK_VERSION}"

GARDENAQEMUDEPS = "${@bb.utils.contains("INCOMPATIBLE_LICENSE", "GPL-3.0", "", "packagegroup-core-device-devel",d)}"
DISTRO_EXTRA_RDEPENDS:append:qemuarm = " ${GARDENAQEMUDEPS}"
DISTRO_EXTRA_RDEPENDS:append:qemuarm64 = " ${GARDENAQEMUDEPS}"
DISTRO_EXTRA_RDEPENDS:append:qemumips = " ${GARDENAQEMUDEPS}"
DISTRO_EXTRA_RDEPENDS:append:qemuppc = " ${GARDENAQEMUDEPS}"
DISTRO_EXTRA_RDEPENDS:append:qemux86 = " ${GARDENAQEMUDEPS}"
DISTRO_EXTRA_RDEPENDS:append:qemux86-64 = " ${GARDENAQEMUDEPS}"

TCLIBCAPPEND = ""

QEMU_TARGETS ?= "arm mips mipsel x86_64"

# TODO: Adjust this for GPL compliance. We have to use our own servers.
PREMIRRORS ??= "\
bzr://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n \
cvs://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n \
git://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n \
gitsm://.*/.* http://downloads.yoctoproject.org/mirror/sources/ \n \
hg://.*/.*    http://downloads.yoctoproject.org/mirror/sources/ \n \
osc://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n \
p4://.*/.*    http://downloads.yoctoproject.org/mirror/sources/ \n \
svn://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n"

MIRRORS =+ "\
git://ssh.dev.azure.com/v3/HQV-Gardena/SG-Gateway/ git://github.com/husqvarnagroup/;protocol=http \n \
ftp://.*/.*      http://downloads.yoctoproject.org/mirror/sources/ \n \
http://.*/.*     http://downloads.yoctoproject.org/mirror/sources/ \n \
https://.*/.*    http://downloads.yoctoproject.org/mirror/sources/ \n"

# The CONNECTIVITY_CHECK_URI's are used to test whether we can succesfully
# fetch from the network (and warn you if not). To disable the test set
# the variable to be empty.
# Git example url: git://git.yoctoproject.org/yocto-firewall-test;protocol=git;rev=master
CONNECTIVITY_CHECK_URIS ?= "https://www.example.com/"

SANITY_TESTED_DISTROS ?= " \
            debian-10 \n \
            debian-11 \n \
            gentoo \n \
            ubuntu-20.04 \n \
            ubuntu-21.10 \n \
            ubuntu-22.04 \n \
            "
#
# OELAYOUT_ABI allows us to notify users when the format of TMPDIR changes in
# an incompatible way. Such changes should usually be detailed in the commit
# that breaks the format and have been previously discussed on the mailing list
# with general agreement from the core team.
#
OELAYOUT_ABI = "12"

# QA check settings - a little stricter than the OE-Core defaults
WARN_TO_ERROR_QA = "already-stripped compile-host-path install-host-path \
                    installed-vs-shipped ldflags pn-overrides rpaths staticdev \
                    useless-rpaths"
WARN_QA:remove = "${WARN_TO_ERROR_QA}"
ERROR_QA:append = " ${WARN_TO_ERROR_QA}"

require conf/distro/include/no-static-libs.inc
require conf/distro/include/yocto-uninative.inc
INHERIT += "uninative"

# OPKG feeds (development only!)
PACKAGE_FEED_URIS ?= "https://gateway-dev.iot.sg.dss.husqvarnagroup.net/continuous/main/${MACHINE}"
PACKAGE_FEED_BASE_PATHS = "ipk"
PACKAGE_FEED_ARCHS:mt7688 = "all mips32r2el-24kc-nf gardena_sg_mt7688"
PACKAGE_FEED_ARCHS:at91sam9x5 = "all armv5e gardena_sg_at91sam"

# Copy our U-Boot environment file to the image directory
UBOOT_ENV="uEnv"

# Limit kernel to the size of our kernel volumes
KERNEL_IMAGE_MAXSIZE = "4096"
KERNEL_IMAGE_MAXSIZE_gardena-sg-at91sam = "8192"

# This ensures that we always have a somewhat sensible hostname, even before
# changing it to "GARDENA-first-4-chars-of-gatewayid".
hostname:pn-base-files = "GARDENA"

# Store build information on target filesystem on /etc/build
INHERIT += "image-buildinfo"
IMAGE_BUILDINFO_VARS = "DISTRO DISTRO_VERSION DISTRO_VERSION_ID"

# Set a default timezone which is valid for most GARDENA customers
DEFAULT_TIMEZONE = "Europe/Zurich"

# Put relevant dependencies in SDK
# Caveat: As of dunfell, the Rust SDK package does not build for AT91SAM
TOOLCHAIN_HOST_TASK:append:mt7688 = " packagegroup-rust-cross-canadian-${MACHINE}"

# build migrationubi for at91
IMAGE_FSTYPES:append:at91sam9x5 = " migrationubi"
IMAGE_CLASSES:append:at91sam9x5 = " gardena_image_types"

# Prevent rtl8192cu from being loaded automatically
KERNEL_MODULE_PROBECONF += "rtl8192cu"
module_conf_rtl8192cu = "blacklist rtl8192cu"

# Prevent 8192cu from being loaded automatically
KERNEL_MODULE_PROBECONF += "8192cu"
module_conf_8192cu = "blacklist 8192cu"

# Prevent rtl8xxxu from being loaded automatically
KERNEL_MODULE_PROBECONF += "rtl8xxxu"
module_conf_rtl8xxxu = "blacklist rtl8xxxu"

# Disable initial U-Boot environment
UBOOT_INITIAL_ENV = ""

# Do not append ".rootfs" or else swupdate_add_artifacts() will fail
IMAGE_NAME_SUFFIX = ""
