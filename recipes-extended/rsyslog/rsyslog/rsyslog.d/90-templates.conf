# Based on RSYSLOG_SyslogProtocol23Format with custom structured data handling
# RSYSLOG_SyslogProtocol23Format: <%PRI%>1 %TIMESTAMP:::date-rfc3339% %HOSTNAME% %APP-NAME% %PROCID% %MSGID% %STRUCTURED-DATA% %msg%\n
template(name="SG_RSYSLOG_SyslogProtocol23Format" type="list") {
    ## BEGIN Header
    # <%PRI%>1 %TIMESTAMP:::date-rfc3339% %HOSTNAME% %APP-NAME% %PROCID% %MSGID%
    constant(value="<")
    property(name="pri")
    constant(value=">1 ")
    property(name="timestamp" dateFormat="rfc3339")
    constant(value=" ")
    property(name="hostname")
    constant(value=" ")
    property(name="app-name")
    constant(value=" ")
    property(name="procid")
    constant(value=" ")
    property(name="msgid")
    constant(value=" ")

    ## BEGIN Structured Data
    # The structured data is composed of static gateway SD, SD from logging system and SD within message (if available)

    # Gateway SD: [gw@55029 env=\"%!gw.env%\" swVersion=\"%!gw.swVersion%\" boardName=\"%!gw.boardName%\" hwRevision=\"%!gw.hwRevision%\" feed=\"%!gw.feed%\" updateImageType=\"%!gw.updateImageType%\"]
    constant(value="[gw@55029")
    constant(value=" env=\"")
    property(name="!gw.env")
    constant(value="\"")
    constant(value=" swVersion=\"")
    property(name="!gw.swVersion")
    constant(value="\"")
    constant(value=" boardName=\"")
    property(name="!gw.boardName")
    constant(value="\"")
    constant(value=" hwRevision=\"")
    property(name="!gw.hwRevision")
    constant(value="\"")
    constant(value=" feed=\"")
    property(name="!gw.feed")
    constant(value="\"")
    constant(value=" updateImageType=\"")
    property(name="!gw.updateImageType")
    constant(value="\"")
    constant(value="]")

    # Logging System SD
    # As we always have gateway SD, we need to omit "-" via regex
    property(name="structured-data" regex.type="ERE" regex.expression="-|(.*)" regex.submatch="1" regex.nomatchmode="BLANK")

    # Message SD
    # We support that log message (%msg%) can also contain SD, we extract it here if available
    property(name="msg" regex.type="ERE" regex.expression="^[[:space:]]?(\\[.*[^\\\\]\\])([[:space:]].*)$" regex.submatch="1" regex.nomatchmode="BLANK")

    ## END Header Structured Data
    constant(value=" ")
    ## END Header

    ## Message
    # If message contains SD, we remove the SD part, if there is no match, we keep the message as is
    property(name="msg" regex.type="ERE" regex.expression="^[[:space:]]?(\\[.*[^\\\\]\\])([[:space:]].*)$" regex.submatch="2" regex.nomatchmode="FIELD")
    constant(value="\n")
}
