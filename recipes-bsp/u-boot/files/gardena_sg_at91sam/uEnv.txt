# Custom commands for development
# Warning: Those commands can be removed at any time.
#          Productive gateways must not use any of those commands!
do_dev_import_default_env=dhcp uEnv-gardena-sg-at91sam.txt && env import -t ${fileaddr} ${filesize}
do_dev_flash_kernel=ubi part ubi && dhcp fitImage-gardena-sg-at91sam.bin && echo "Writing to kernel${bootslot}" && ubi write ${fileaddr} kernel${bootslot} ${filesize}
do_dev_flash_rootfs=ubi part ubi && dhcp gardena-image-prod-gardena-sg-at91sam.squashfs-xz && echo "Writing to rootfs${bootslot}" && ubi write ${fileaddr} rootfs${bootslot} ${filesize}
do_dev_flash=run do_dev_flash_kernel && run do_dev_flash_rootfs
do_dev_u_boot_upgrade=dhcp u-boot-with-spl.bin-gardena-sg-at91sam && nand erase 0 180000 && nand write ${fileaddr} 0 ${filesize} && reset
do_dev_ubi_setup=nand erase 180000 10000000; ubi part ubi && ubi create rootfs0 0x2815000 static 0 && ubi create rootfs1 0x2815000 static 1 && ubi create kernel0 0x41e000 static 2 && ubi create kernel1 0x41e000 static 3 && ubi create uboot_env0 0x10000 static 4 && ubi create uboot_env1 0x10000 static 5 && ubi create overlay 0x1e00000 dynamic 6

do_dev_led_set_state=for color in blue green red; do led smartgw:${led_name}:${color} ${led_state}; done
do_dev_led_off=led_state=off; run do_dev_led_set_state
do_dev_led_on=led_state=on; run do_dev_led_set_state

# Custom commands required regular startup
# Warning: Removing or changing any of this lines requires care as gateways in
#          the field need to be updated with all changes!
do_toggle_bootslot=if test "${bootslot}" = "0"; then setenv bootslot 1; else setenv bootslot 0;fi;
do_set_bootargs=setenv bootargs console=ttyS0,${baudrate} root=/dev/ubiblock0_${bootslot} rootrw=ubi0:overlay rootrwfstype=ubifs rootrwoptions=rw,noatime ubi.block=0,rootfs${bootslot} ubi.mtd=ubi init=/init mtdparts="${mtdparts}" ${dev_bootargs}
do_reset_overlay=ubi part ubi && ubi remove overlay; ubi create overlay 0x1e00000 dynamic 6
do_boot_from_flash=ubi read 0x22000000 kernel${bootslot} && bootm 0x22000000
do_factory_reset=run do_reset_overlay && led smartgw:power:blue off && led smartgw:power:green on && led smartgw:power:red on
do_if_factory_reset=if gpio input 24; then echo "Button pressed, issuing factory reset"; run do_factory_reset; else true; fi && if test "${enable_factory_reset}" = "1"; then echo "Factory reset enabled via u-boot variable" && run do_factory_reset && setenv enable_factory_reset && saveenv; else true; fi
do_resurrection_reset=echo "resurrection reset triggered" && run do_toggle_bootslot && saveenv && led smartgw:power:blue off && led smartgw:power:green off && led smartgw:power:red on
do_if_resurrection_reset=printenv recovery_status || setenv holdtime 0 && while gpio input 24; do if test $holdtime = 1e; then run do_resurrection_reset; fi; setexpr holdtime ${holdtime} + 1; sleep 1; done || true

# migration related commands
do_migration_ubi_setup=ubi remove rootfs1; ubi remove kernel1; ubi remove overlay; ubi create rootfs1 0x2815000 static 1 && ubi create kernel1 0x41e000 static 3 && ubi create overlay 0x1e00000 dynamic 6
do_if_not_migrated=if test "${migration_done}" != "1"; then setenv bootslot 0 && run do_migration_ubi_setup; else true; fi;

## Relevant for startup
bootcmd=ubi part ubi && run do_if_not_migrated && run do_if_factory_reset && run do_if_resurrection_reset && run do_set_bootargs && run do_boot_from_flash; reset
